# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.3)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    0.065), point2=(0.0, -0.0549999999674037))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.05), point2=(
    0.0449999999627471, 0.05))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0449999999627471, 
    0.05), point2=(0.0449999999627471, -0.0549999999674037))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0449999999627471, 
    -0.0549999999674037), point2=(0.0, -0.0549999999674765))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    -0.0549999999674765), point2=(0.0, 0.05))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(-0.065, 
    0.0), point2=(0.08, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    0.027789767831564, 0.0745053142309189), value=0.0381, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    0.0953118354082108, 0.0171889085322618), value=0.13335, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
mdb.models['Model-1'].sketches['__profile__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], textPoint=(
    0.110219314694405, 0.0154343266040087), value=0.066675)
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Full Tank Al Model', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Full Tank Al Model'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.006, name='__profile__', 
    sheetSize=0.277, transform=
    mdb.models['Model-1'].parts['Full Tank Al Model'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Full Tank Al Model'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Full Tank Al Model'].edges[0], 
    sketchOrientation=LEFT, origin=(0.01905, 0.0, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].parts['Full Tank Al Model'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.01905, 0.066675), 
    point2=(0.01905, 0.066675))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.01905, 0.066675), 
    point2=(0.01905, -0.066675))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.01905, -0.066675), 
    point2=(-0.01905, -0.0666750000000728))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.01905, 
    -0.0666750000000728), point2=(-0.01905, 0.066675))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(
    -0.01905, 0.066675), point2=(-0.01905, -0.0666750000000728))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].parts['Full Tank Al Model'].SolidRevolve(angle=360.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=LEFT, 
    sketchPlane=mdb.models['Model-1'].parts['Full Tank Al Model'].faces[0], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumCsysByThreePoints(
    coordSysType=CYLINDRICAL, line1=(1.0, 0.0, 0.0), line2=(0.0, 1.0, 0.0), 
    name='Datum csys-1', origin=(0.0, 0.0, 0.0))
# Save by nab2 on 2017_04_20-11.41.48; build 2016.HF5 2016_07_06-08.50.19 127027
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.saveAs(pathName='N:/Desktop/FEA/Full Tank Model Database.cae')
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByCoordinate(
    coords=(0.0, 0.0, 0.0))
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByOffset(point=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[2], MIDDLE), 
    vector=(0.0, 0.0, 0.0))
del mdb.models['Model-1'].parts['Full Tank Al Model'].features['Datum pt-2']
# Save by nab2 on 2017_04_20-11.55.11; build 2016.HF5 2016_07_06-08.50.19 127027
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByProjOnEdge(edge=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[3].axis2, point=
    mdb.models['Model-1'].parts['Full Tank Al Model'].vertices[0])
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByProjOnEdge(edge=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[3].axis3, point=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE))
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByProjOnEdge(edge=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[3].axis1, point=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE))
del mdb.models['Model-1'].parts['Full Tank Al Model'].features['Datum pt-4']
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByOffset(point=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE), 
    vector=(0.0, 0.0, 2.0))
del mdb.models['Model-1'].parts['Full Tank Al Model'].features['Datum pt-4']
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByOffset(point=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE), 
    vector=(0.0, 0.0, 0.05))
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumCsysByThreePoints(
    coordSysType=CYLINDRICAL, name='cyl coords', origin=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[7], point1=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE), 
    point2=mdb.models['Model-1'].parts['Full Tank Al Model'].datums[10])
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Datum csys-1'].suppress(
    )
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Datum csys-1'].resume(
    )
mdb.models['Model-1'].parts['Full Tank Al Model'].features['cyl coords'].resume(
    )
del mdb.models['Model-1'].parts['Full Tank Al Model'].features['cyl coords']
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Datum pt-2'].resume(
    )
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumPointByMidPoint(point1=
    mdb.models['Model-1'].parts['Full Tank Al Model'].vertices[1], point2=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[2], MIDDLE))
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumCsysByThreePoints(
    coordSysType=CYLINDRICAL, name='cyl coords', origin=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[7], point1=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE), 
    point2=mdb.models['Model-1'].parts['Full Tank Al Model'].datums[10])
del mdb.models['Model-1'].parts['Full Tank Al Model'].features['cyl coords']
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumCsysByThreePoints(
    coordSysType=CYLINDRICAL, name='cyl coords', origin=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[7], point1=
    mdb.models['Model-1'].parts['Full Tank Al Model'].datums[10], point2=
    mdb.models['Model-1'].parts['Full Tank Al Model'].InterestingPoint(
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[1], MIDDLE))
mdb.models['Model-1'].parts['Full Tank Al Model'].features['cyl coords'].suppress(
    )
del mdb.models['Model-1'].parts['Full Tank Al Model'].features['cyl coords']
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Full Tank Al Model-1', part=
    mdb.models['Model-1'].parts['Full Tank Al Model'])
mdb.models['Model-1'].parts['Full Tank Al Model'].features.changeKey(fromName=
    'Datum csys-1', toName='Abaqus_global')
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Abaqus_global'].suppress(
    )
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Datum csys-1'].suppress()
mdb.models['Model-1'].rootAssembly.features['Datum csys-1'].resume()
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-1'].datums[10])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Datum csys-1'].suppress()
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CYLINDRICAL, name='Cyl Coords', origin=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-1'].datums[4]
    , point1=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-1'].edges[1], 
    MIDDLE), point2=mdb.models['Model-1'].rootAssembly.referencePoints[4])
# Save by nab2 on 2017_04_20-14.28.46; build 2016.HF5 2016_07_06-08.50.19 127027
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='Aluminum 6061T6')
mdb.models['Model-1'].materials['Aluminum 6061T6'].Elastic(table=((
    68900000000.0, 0.33), ))
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Aluminum 6061T6', name=
    'Tank thickness shell section', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.008128, thicknessField=
    '', thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].parts['Full Tank Al Model'].Set(cells=
    mdb.models['Model-1'].parts['Full Tank Al Model'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Full Tank Al Model'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Full Tank Al Model'].sets['Set-1'], 
    sectionName='Tank thickness shell section', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].StaticStep(name='Static General Linear Elastic', 
    previous='Initial')
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Full Tank Al Model'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Full Tank Al Model'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[4])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.0300993360579014, 0.0863599851727486), value=0.001, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(0.0381, 0.066675), 
    point2=(0.0, 0.0675))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(0.0381, -0.066675)
    , point2=(0.0, -0.0675))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], point1=(
    0.0376091711223125, 0.0665519386529922))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0381, 0.066675), 
    point2=(0.0381, 0.0674999999441206))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[8])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[8])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0381, 
    0.0674999999441206), point2=(0.0, 0.0674999999441206))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[9])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[9])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 
    0.0674999999441206), point2=(0.0, 0.0667287409305573))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 
    0.0667287409305573), point2=(0.0371, 0.066675))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], point1=(
    0.0375082083046436, -0.0668884292244911))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0381, -0.066675), 
    point2=(0.0381, -0.0674999999441206))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[12])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[12])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0381, 
    -0.0674999999441206), point2=(0.0, -0.0674999999441206))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[13])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[13])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 
    -0.0674999999441206), point2=(0.0, -0.0666884854435921))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[14])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[13], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[14])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 
    -0.0666884854435921), point2=(0.0371, -0.0666750000000728))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[15])
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], point1=(
    0.0098953926935792, 0.0663504973053932))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], point1=(
    0.000394293107092381, 0.0672166123986244))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0371, 0.066675), 
    point2=(0.0, 0.066675))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[16])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[16])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 0.066675), point2=
    (0.0, 0.0674999999441206))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[17])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[16], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[17])
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Full Tank Al Model'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Full Tank Al Model'].backup()
mdb.models['Model-1'].parts['Full Tank Al Model'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Full Tank Al Model'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Full Tank Al Model'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['Full Tank Al Model'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], ))
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Full Tank Al Model'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Full Tank Al Model'].backup()
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Solid revolve-1'].suppress(
    )
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.007, name='__profile__', 
    sheetSize=0.28, transform=
    mdb.models['Model-1'].parts['Full Tank Al Model'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Full Tank Al Model'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Full Tank Al Model'].edges[2], 
    sketchOrientation=LEFT, origin=(0.031681, 8.5e-05, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].parts['Full Tank Al Model'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(
    -0.031681, 0.0674149999441206), point2=(-0.031681, -0.0332500000949949))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.031681, 0.06659), 
    point2=(-0.031681, 0.0674149999441206))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.031681, 
    0.0674149999441206), point2=(0.006419, 0.0674149999441206))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.006419, 
    0.0674149999441206), point2=(0.006419, 0.06659))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.006419, 0.06659), 
    point2=(0.006419, -0.06676))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.006419, -0.06676), 
    point2=(0.006419, -0.0675849999441206))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.006419, 
    -0.0675849999441206), point2=(-0.031681, -0.0675849999441206))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.031681, 
    -0.0675849999441206), point2=(-0.031681, -0.0667734854435921))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.031681, 
    -0.0667734854435921), point2=(0.005419, -0.06676))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.005419, -0.06676), 
    point2=(0.005419, 0.06659))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.005419, 0.06659), 
    point2=(-0.031681, 0.06659))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[21], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].parts['Full Tank Al Model'].SolidRevolve(angle=360.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=LEFT, 
    sketchPlane=mdb.models['Model-1'].parts['Full Tank Al Model'].faces[0], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['Full Tank Al Model'].edges[2])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Full Tank Al Model'].DatumCsysByThreePoints(
    coordSysType=CYLINDRICAL, line1=(1.0, 0.0, 0.0), line2=(0.0, 1.0, 0.0), 
    name='Abaqus global', origin=(0.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Full Tank Al Model-2', part=
    mdb.models['Model-1'].parts['Full Tank Al Model'])
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Full Tank Al Model-1', 
    'RP-1', 'Cyl Coords'))
mdb.models['Model-1'].rootAssembly.features['Datum csys-1'].resume()
mdb.models['Model-1'].rootAssembly.features['Datum csys-1'].suppress()
mdb.models['Model-1'].parts['Full Tank Al Model'].features['Abaqus global'].suppress(
    )
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.DatumPointByOffset(point=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-2'].datums[4]
    , vector=(0.0, 0.0, 0.02))
mdb.models['Model-1'].rootAssembly.features.changeKey(fromName='Datum pt-1', 
    toName='Theta offset')
mdb.models['Model-1'].rootAssembly.features['Theta offset'].setValues(zOffset=
    0.2)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Theta offset'].setValues(zOffset=
    0.05)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CYLINDRICAL, name='Cyl Coords', origin=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-2'].datums[4]
    , point1=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-2'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-2'].edges[3], 
    MIDDLE), point2=mdb.models['Model-1'].rootAssembly.datums[8])
mdb.models['Model-1'].parts['Full Tank Al Model'].Set(cells=
    mdb.models['Model-1'].parts['Full Tank Al Model'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-2')
mdb.models['Model-1'].parts['Full Tank Al Model'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Full Tank Al Model'].sets['Set-2'], 
    sectionName='Tank thickness shell section', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-2'].faces.getSequenceFromMask(
    ('[#38 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName=
    'Static General Linear Elastic', distributionType=UNIFORM, field='', 
    magnitude=303000.0, name='Internal Pressure Load', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Full Tank Al Model-2'].edges.getSequenceFromMask(
    ('[#5 ]', ), ), name='Set-1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Static General Linear Elastic', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='Static BCs', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-1'], u1=0.0, u2=0.0, u3=0.0, 
    ur1=0.0, ur2=0.0, ur3=0.0)
# Save by nab2 on 2017_04_20-15.18.30; build 2016.HF5 2016_07_06-08.50.19 127027
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Full Tank Al Model'].regenerate()
# Save by nab2 on 2017_04_20-15.24.24; build 2016.HF5 2016_07_06-08.50.19 127027
