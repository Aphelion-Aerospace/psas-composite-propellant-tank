# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis(
    'C:/Users/nab2/Documents/Capstone/CAD models/1st iteration/mating_ring(mks).SAT'
    , scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='mating_ring(mks)', scale=0.001, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].Material(name='Aluminum6061T6')
mdb.models['Model-1'].materials['Aluminum6061T6'].Elastic(table=((
    69000000000.0, 0.29), ))
mdb.models['Model-1'].materials['Aluminum6061T6'].Conductivity(table=((152.0, 
    ), ))
mdb.models['Model-1'].materials['Aluminum6061T6'].Expansion(table=((2.34e-05, 
    ), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Aluminum6061T6', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].parts['mating_ring(mks)'].Set(cells=
    mdb.models['Model-1'].parts['mating_ring(mks)'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['mating_ring(mks)'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['mating_ring(mks)'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'mating_ring(mks)-1', part=mdb.models['Model-1'].parts['mating_ring(mks)'])
mdb.models['Model-1'].HeatTransferStep(amplitude=RAMP, name='HtXfer', previous=
    'Initial', response=STEADY_STATE)
# Save by nab2 on 2017_02_22-17.48.44; build 2016.HF5 2016_07_06-08.50.19 127027
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['mating_ring(mks)-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].BodyHeatFlux(createStepName='HtXfer', magnitude=10.0, 
    name='Load-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['mating_ring(mks)-1'].faces.getSequenceFromMask(
    ('[#ec ]', ), ), name='Set-2')
mdb.models['Model-1'].TemperatureBC(amplitude=UNSET, createStepName='HtXfer', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, magnitude=25.0, name=
    'ambient', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['mating_ring(mks)-1'].faces.getSequenceFromMask(
    ('[#e03 ]', ), ), name='Set-3')
mdb.models['Model-1'].TemperatureBC(amplitude=UNSET, createStepName='HtXfer', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, magnitude=-182.0, name=
    'cryo', region=mdb.models['Model-1'].rootAssembly.sets['Set-3'])
mdb.models['Model-1'].HistoryOutputRequest(createStepName='HtXfer', name=
    'H-Output-1', variables=('FTEMP', 'HFLA', 'HTL', 'HTLA', 'RADFL', 'RADFLA', 
    'RADTL', 'RADTLA', 'VFTOT', 'SJD', 'SJDA', 'SJDT', 'SJDTA', 'WEIGHT'))
mdb.models['Model-1'].parts['mating_ring(mks)'].setMeshControls(elemShape=TET, 
    regions=
    mdb.models['Model-1'].parts['mating_ring(mks)'].cells.getSequenceFromMask((
    '[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['mating_ring(mks)'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['mating_ring(mks)'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['mating_ring(mks)'].setElementType(elemTypes=(
    ElemType(elemCode=DC3D20, elemLibrary=STANDARD), ElemType(elemCode=DC3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=DC3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['mating_ring(mks)'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['mating_ring(mks)'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.0082)
mdb.models['Model-1'].parts['mating_ring(mks)'].generateMesh()
mdb.models.changeKey(fromName='Model-1', toName='2403tetquadRing')
# Save by nab2 on 2017_02_22-17.56.15; build 2016.HF5 2016_07_06-08.50.19 127027
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['2403tetquadRing'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='2403tetquadRing', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='2403tetquadRing', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['2403tetquadRing'].submit(consistencyChecking=OFF)
mdb.jobs['2403tetquadRing']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'MCAE17', 'handle': 0, 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '16 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NO VALID RADIATION OUTPUT REQUESTS HAVE BEEN GENERATED. THIS MAY BE BECAUSE NO VALID CAVITIES EXIST IN THE MODEL.', 
    'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\2403tetquadRing.odb', 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'MCAE17', 'handle': 6460, 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '2403tetquadRing', 'memory': 31.0})
mdb.jobs['2403tetquadRing']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '2403tetquadRing', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['2403tetquadRing']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRing'})
mdb.jobs['2403tetquadRing']._Message(JOB_COMPLETED, {
    'time': 'Wed Feb 22 17:56:51 2017', 'jobName': '2403tetquadRing'})
mdb.Model(name='2403tetquadRingStress', objectToCopy=
    mdb.models['2403tetquadRing'])
mdb.models['2403tetquadRingStress'].StaticStep(maintainAttributes=True, name=
    'HtXfer', previous='Initial')
mdb.models['2403tetquadRingStress'].rootAssembly.Set(cells=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].edges.getSequenceFromMask(
    ('[#ffffff ]', ), ), faces=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].faces.getSequenceFromMask(
    ('[#fff ]', ), ), name='Set-4', vertices=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].vertices.getSequenceFromMask(
    ('[#ffff ]', ), ))
mdb.models['2403tetquadRingStress'].Temperature(createStepName='Initial', 
    crossSectionDistribution=CONSTANT_THROUGH_THICKNESS, distributionType=
    UNIFORM, magnitudes=(25.0, ), name='Predefined Field-1', region=
    mdb.models['2403tetquadRingStress'].rootAssembly.sets['Set-4'])
mdb.models['2403tetquadRingStress'].rootAssembly.Set(cells=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].edges.getSequenceFromMask(
    ('[#ffffff ]', ), ), faces=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].faces.getSequenceFromMask(
    ('[#fff ]', ), ), name='Set-5', vertices=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].vertices.getSequenceFromMask(
    ('[#ffff ]', ), ))
mdb.models['2403tetquadRingStress'].Temperature(absoluteExteriorTolerance=0.0, 
    beginIncrement=1, beginStep=1, createStepName='HtXfer', distributionType=
    FROM_FILE, endIncrement=None, endStep=None, exteriorTolerance=0.05, 
    fileName='C:\\temp\\2403tetquadRing.odb', interpolate=OFF, name=
    'Predefined Field-2')
mdb.models['2403tetquadRingStress'].parts['mating_ring(mks)'].setElementType(
    elemTypes=(ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(
    elemCode=C3D15, elemLibrary=STANDARD), ElemType(elemCode=C3D10, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['2403tetquadRingStress'].parts['mating_ring(mks)'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['2403tetquadRingStress'].parts['mating_ring(mks)'].generateMesh()
mdb.models['2403tetquadRingStress'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='2403tetquadRingStress', 
    modelPrint=OFF, multiprocessingMode=DEFAULT, name='2403tetquadRingStress', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['2403tetquadRingStress'].submit(consistencyChecking=OFF)
mdb.jobs['2403tetquadRingStress']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'MCAE17', 'handle': 0, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '16 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\2403tetquadRingStress.odb', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'MCAE17', 'handle': 12056, 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': '2403tetquadRingStress', 
    'memory': 63.0})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 
    'step': 1, 'jobName': '2403tetquadRingStress', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['2403tetquadRingStress']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(JOB_COMPLETED, {
    'time': 'Wed Feb 22 18:04:34 2017', 'jobName': '2403tetquadRingStress'})
mdb.models['2403tetquadRingStress'].rootAssembly.Set(cells=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].edges.getSequenceFromMask(
    ('[#ffffff ]', ), ), faces=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].faces.getSequenceFromMask(
    ('[#fff ]', ), ), name='Set-6', vertices=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].vertices.getSequenceFromMask(
    ('[#ffff ]', ), ))
mdb.models['2403tetquadRingStress'].DisplacementBC(amplitude=UNSET, 
    createStepName='HtXfer', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='Rotation', region=
    mdb.models['2403tetquadRingStress'].rootAssembly.sets['Set-6'], u1=UNSET, 
    u2=UNSET, u3=UNSET, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.jobs['2403tetquadRingStress'].submit(consistencyChecking=OFF)
mdb.jobs['2403tetquadRingStress']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'MCAE17', 'handle': 0, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '16 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 4 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 5 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 6 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\2403tetquadRingStress.odb', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'MCAE17', 'handle': 7484, 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': '2403tetquadRingStress', 
    'memory': 63.0})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 
    'step': 1, 'jobName': '2403tetquadRingStress', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['2403tetquadRingStress']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(JOB_COMPLETED, {
    'time': 'Wed Feb 22 18:06:10 2017', 'jobName': '2403tetquadRingStress'})
mdb.models['2403tetquadRingStress'].rootAssembly.Set(cells=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].edges.getSequenceFromMask(
    ('[#ffffff ]', ), ), faces=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].faces.getSequenceFromMask(
    ('[#fff ]', ), ), name='Set-7', vertices=
    mdb.models['2403tetquadRingStress'].rootAssembly.instances['mating_ring(mks)-1'].vertices.getSequenceFromMask(
    ('[#ffff ]', ), ))
mdb.models['2403tetquadRingStress'].DisplacementBC(amplitude=UNSET, 
    createStepName='HtXfer', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='Yrestraint', region=
    mdb.models['2403tetquadRingStress'].rootAssembly.sets['Set-7'], u1=UNSET, 
    u2=0.0, u3=UNSET, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.jobs['2403tetquadRingStress'].submit(consistencyChecking=OFF)
mdb.jobs['2403tetquadRingStress']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'MCAE17', 'handle': 0, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '16 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 4 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 5 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 6 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 4 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 5 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'DEGREE OF FREEDOM 6 IS NOT ACTIVE IN THIS MODEL AND CANNOT BE RESTRAINED.', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\2403tetquadRingStress.odb', 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'MCAE17', 'handle': 12208, 
    'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': '2403tetquadRingStress', 
    'memory': 63.0})
mdb.jobs['2403tetquadRingStress']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 
    'step': 1, 'jobName': '2403tetquadRingStress', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['2403tetquadRingStress']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '2403tetquadRingStress'})
mdb.jobs['2403tetquadRingStress']._Message(JOB_COMPLETED, {
    'time': 'Wed Feb 22 18:08:12 2017', 'jobName': '2403tetquadRingStress'})
# Save by nab2 on 2017_02_22-18.13.17; build 2016.HF5 2016_07_06-08.50.19 127027
